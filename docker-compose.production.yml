version: '3.8'

services:
  fiso-production:
    build:
      context: .
      dockerfile: Dockerfile.production
    ports:
      - "5000:5000"  # Production server
      - "5001:5001"  # Real-time server
    environment:
      - FLASK_ENV=production
      - PYTHONPATH=/app
      - NODE_ENV=production
    volumes:
      - ./logs:/app/logs
      - ./reports:/app/reports
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    networks:
      - fiso-network

  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - fiso-production
    networks:
      - fiso-network
    profiles:
      - with-proxy

  # Optional: Add monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - fiso-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - fiso-network
    profiles:
      - monitoring

networks:
  fiso-network:
    driver: bridge

volumes:
  grafana-storage: